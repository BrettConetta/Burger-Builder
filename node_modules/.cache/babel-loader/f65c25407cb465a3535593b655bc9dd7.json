{"ast":null,"code":"import _objectSpread from \"/Users/brett/Documents/dev/react/Burger-Builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brett/Documents/dev/react/Burger-Builder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nclass Orders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/orders.json').then(res => {\n      const fetchedOrders = [];\n\n      for (let key in res.data) {\n        fetchedOrders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n      }\n\n      this.setState({\n        loading: false,\n        orders: fetchedOrders\n      });\n    }).catch(err => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.orders.map(order => React.createElement(Order, {\n      key: order.id,\n      ingredients: order.ingredients,\n      price: +order.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withErrorHandler(Orders, axios);","map":{"version":3,"sources":["/Users/brett/Documents/dev/react/Burger-Builder/src/containers/Orders/Orders.js"],"names":["React","Component","Order","axios","withErrorHandler","Orders","state","orders","loading","componentDidMount","get","then","res","fetchedOrders","key","data","push","id","setState","catch","err","render","map","order","ingredients","price"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC9BK,KAD8B,GACtB;AACPC,MAAAA,MAAM,EAAE,EADD;AAEPC,MAAAA,OAAO,EAAE;AAFF,KADsB;AAAA;;AAM9BC,EAAAA,iBAAiB,GAAG;AACnBN,IAAAA,KAAK,CAACO,GAAN,CAAU,cAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACZ,YAAMC,aAAa,GAAG,EAAtB;;AACA,WAAI,IAAIC,GAAR,IAAeF,GAAG,CAACG,IAAnB,EAAyB;AACxBF,QAAAA,aAAa,CAACG,IAAd,mBACIJ,GAAG,CAACG,IAAJ,CAASD,GAAT,CADJ;AAECG,UAAAA,EAAE,EAAEH;AAFL;AAIA;;AACD,WAAKI,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE,KAAV;AAAiBD,QAAAA,MAAM,EAAEM;AAAzB,OAAd;AACA,KAVD,EAWCM,KAXD,CAWOC,GAAG,IAAI;AACb,WAAKF,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,KAbD;AAcA;;AAEDa,EAAAA,MAAM,GAAI;AACT,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAsBC,KAAK,IAC3B,oBAAC,KAAD;AACC,MAAA,GAAG,EAAEA,KAAK,CAACN,EADZ;AAEC,MAAA,WAAW,EAAEM,KAAK,CAACC,WAFpB;AAGC,MAAA,KAAK,EAAE,CAACD,KAAK,CAACE,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,CADD;AAUA;;AAlC6B;;AAqC/B,eAAerB,gBAAgB,CAACC,MAAD,EAASF,KAAT,CAA/B","sourcesContent":["import React, {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n\tstate = {\r\n\t\torders: [],\r\n\t\tloading: true\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\taxios.get('/orders.json')\r\n\t\t.then(res => {\r\n\t\t\tconst fetchedOrders = [];\r\n\t\t\tfor(let key in res.data) {\r\n\t\t\t\tfetchedOrders.push({\r\n\t\t\t\t\t...res.data[key],\r\n\t\t\t\t\tid: key\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.setState({loading: false, orders: fetchedOrders});\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tthis.setState({loading: false});\r\n\t\t});\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.state.orders.map(order => (\r\n\t\t\t\t\t<Order \r\n\t\t\t\t\t\tkey={order.id}\r\n\t\t\t\t\t\tingredients={order.ingredients}\r\n\t\t\t\t\t\tprice={+order.price}/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);"]},"metadata":{},"sourceType":"module"}