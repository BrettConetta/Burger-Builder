{"ast":null,"code":"import _objectSpread from \"/Users/brett/Documents/dev/react/Burger-Builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brett/Documents/dev/react/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport axios from '../../axios-orders';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from './../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.50,\n  cheese: 0.40,\n  meat: 1.30,\n  bacon: 0.70,\n  tomato: 0.50,\n  vegan: 2.05,\n  fish: 1.65\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4.0,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount - 1;\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceReduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceReduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      //alert('You continue');\n      // this.setState({loading: 'true'});\n      // const order = {\n      // \tingredients: this.state.ingredients,\n      // \tprice: this.state.totalPrice.toFixed(2),\n      // \tcustomer: {\n      // \t\tname: 'Brett Conetta',\n      // \t\taddress: {\n      // \t\t\tstreet: '86 Beechtree Dr',\n      // \t\t\tcity: 'Toms River',\n      // \t\t\tstate: 'New Jersey',\n      // \t\t\tzipcode: '08753',\n      // \t\t\tcountry: 'United States'\n      // \t\t},\n      // \t\temail: 'brettconetta76@gmail.com'\n      // \t},\n      // \tdeliveryMethod: 'fastest'\n      // }\n      // axios.post('/orders.json', order)\n      // .then(response => {\n      // \tthis.setState({loading: true, purchasing: false});\n      // })\n      // .catch(error => {\n      // \tthis.setState({loading: false, purchasing: false});\n      // });\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      console.log(queryParams);\n      console.log(queryString);\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.location);\n    axios.get('https://react-my-burger-945c2.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disbaledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disbaledInfo) {\n      disbaledInfo[key] = disbaledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Ingredients can't be loaded\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disbaledInfo,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        price: this.state.totalPrice,\n        ingredients: this.state.ingredients,\n        cancelled: this.purchaseCancelHandler,\n        continued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/brett/Documents/dev/react/Burger-Builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","axios","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","tomato","vegan","fish","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceReduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","console","log","props","history","pathname","search","componentDidMount","location","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disbaledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from '../../axios-orders';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from './../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst INGREDIENT_PRICES = {\r\n\tsalad: 0.50,\r\n\tcheese: 0.40,\r\n\tmeat: 1.30,\r\n\tbacon: 0.70,\r\n\ttomato: 0.50,\r\n\tvegan: 2.05,\r\n\tfish: 1.65\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n\tstate = {\r\n\t\tingredients: null,\r\n\t\ttotalPrice: 4.0,\r\n\t\tpurchasable: false,\r\n\t\tpurchasing: false,\r\n\t\tloading: false,\r\n\t\terror: false\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(this.props.location);\r\n\t\taxios.get('https://react-my-burger-945c2.firebaseio.com/ingredients.json')\r\n\t\t\t.then(response => {\r\n\t\t\t\tthis.setState({ingredients: response.data});\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({error: true})\r\n\t\t\t});\r\n\t}\r\n\r\n\tupdatePurchaseState (ingredients){\r\n\t\tconst sum = Object.keys(ingredients).map(igKey => {\r\n\t\t\treturn ingredients[igKey];\r\n\t\t}).reduce((sum, el) => {\r\n\t\t\treturn sum + el;\r\n\t\t}, 0);\r\n\t\tthis.setState({purchasable: sum > 0})\r\n\t}\r\n\r\n\taddIngredientHandler = type => {\r\n\t\tconst oldCount = this.state.ingredients[type];\r\n\t\tconst updatedCount = oldCount + 1;\r\n\t\tconst updatedIngredients = {\r\n\t\t\t...this.state.ingredients\r\n\t\t};\r\n\t\tupdatedIngredients[type] = updatedCount;\r\n\r\n\t\tconst priceAddition = INGREDIENT_PRICES[type];\r\n\t\tconst oldPrice = this.state.totalPrice;\r\n\t\tconst newPrice = oldPrice + priceAddition;\r\n\r\n\t\tthis.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n\t\tthis.updatePurchaseState(updatedIngredients);\r\n\r\n\r\n\t}\r\n\r\n\tremoveIngredientHandler = type => {\r\n\t\tconst oldCount = this.state.ingredients[type];\r\n\t\tconst updatedCount = oldCount - 1;\r\n\t\tif(oldCount <= 0)\r\n\t\t{\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst updatedIngredients = {\r\n\t\t\t...this.state.ingredients\r\n\t\t};\r\n\t\tupdatedIngredients[type] = updatedCount;\r\n\r\n\t\tconst priceReduction = INGREDIENT_PRICES[type];\r\n\t\tconst oldPrice = this.state.totalPrice;\r\n\t\tconst newPrice = oldPrice - priceReduction;\r\n\r\n\t\tthis.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n\t\tthis.updatePurchaseState(updatedIngredients);\r\n\t}\r\n\r\n\tpurchaseHandler = () => {\r\n\t\tthis.setState({purchasing: true});\r\n\t}\r\n\r\n\tpurchaseCancelHandler = () => {\r\n\t\tthis.setState({purchasing: false});\r\n\t} \r\n\r\n\tpurchaseContinueHandler = () => {\r\n\t\t//alert('You continue');\r\n\t\t// this.setState({loading: 'true'});\r\n\t\t// const order = {\r\n\t\t// \tingredients: this.state.ingredients,\r\n\t\t// \tprice: this.state.totalPrice.toFixed(2),\r\n\t\t// \tcustomer: {\r\n\t\t// \t\tname: 'Brett Conetta',\r\n\t\t// \t\taddress: {\r\n\t\t// \t\t\tstreet: '86 Beechtree Dr',\r\n\t\t// \t\t\tcity: 'Toms River',\r\n\t\t// \t\t\tstate: 'New Jersey',\r\n\t\t// \t\t\tzipcode: '08753',\r\n\t\t// \t\t\tcountry: 'United States'\r\n\t\t// \t\t},\r\n\t\t// \t\temail: 'brettconetta76@gmail.com'\r\n\t\t// \t},\r\n\t\t// \tdeliveryMethod: 'fastest'\r\n\t\t// }\r\n\t\t// axios.post('/orders.json', order)\r\n\t\t// .then(response => {\r\n\t\t// \tthis.setState({loading: true, purchasing: false});\r\n\t\t// })\r\n\t\t// .catch(error => {\r\n\t\t// \tthis.setState({loading: false, purchasing: false});\r\n\t\t// });\r\n\t\tconst queryParams = [];\r\n\t\tfor(let i in this.state.ingredients) {\r\n\t\t\tqueryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n\t\t}\r\n\t\tqueryParams.push('price=' + this.state.totalPrice);\r\n\t\tconst queryString = queryParams.join('&');\r\n\t\tconsole.log(queryParams);\r\n\t\tconsole.log(queryString);\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: '/checkout',\r\n\t\t\tsearch: '?' + queryString\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst disbaledInfo = {\r\n\t\t\t...this.state.ingredients\r\n\t\t};\r\n\t\tfor (let key in disbaledInfo) {\r\n\t\t\tdisbaledInfo[key] = disbaledInfo[key] <= 0\r\n\t\t}\r\n\t\tlet orderSummary = null\r\n\t\t\t\t\t\t\t\t\r\n\t\tlet burger = this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner/>\r\n\t\tif(this.state.ingredients) {\r\n\t\t\tburger = (\r\n\t\t\t\t<Aux>\r\n\t\t\t\t\t<Burger ingredients={this.state.ingredients}/>\r\n\t\t\t\t\t<BuildControls \r\n\t\t\t\t\t\tingredientAdded={this.addIngredientHandler}\r\n\t\t\t\t\t\tingredientRemoved={this.removeIngredientHandler}\r\n\t\t\t\t\t\tdisabled={disbaledInfo}\r\n\t\t\t\t\t\tpurchasable={this.state.purchasable}\r\n\t\t\t\t\t\tordered={this.purchaseHandler}\r\n\t\t\t\t\t\tprice={this.state.totalPrice}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Aux>\r\n\t\t\t)\r\n\t\t\torderSummary = <OrderSummary \r\n\t\t\t\t\t\t\t\tprice={this.state.totalPrice}\r\n\t\t\t\t\t\t\t\tingredients={this.state.ingredients} \r\n\t\t\t\t\t\t\t\tcancelled={this.purchaseCancelHandler} \r\n\t\t\t\t\t\t\t\tcontinued={this.purchaseContinueHandler}/>\r\n\t\t}\r\n\r\n\t\tif(this.state.loading) {\r\n\t\t\torderSummary = <Spinner/>\r\n\t\t}\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<Aux>\r\n\t\t\t\t<Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n\t\t\t\t\t{orderSummary}\r\n\t\t\t\t</Modal>\r\n\t\t\t\t{burger}\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</Aux>\r\n\t\t);\r\n\t\t\r\n\t}\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}